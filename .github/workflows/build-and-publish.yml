name: Build and Publish

on:
  # Run it on push to the default repository branch
  push:
    branches: [main]
  # Run it during pull request
  pull_request:

jobs:
  # Define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker images and push to Docker Hub
    # Run only when code is compiling and tests are passing
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./src/samples/Dockerfile
            context: ./src/samples
            image: github-actions-test 
          - dockerfile: ./src/basic/fastapi/Dockerfile
            context: ./src/basic/fastapi
            image: fastapi_basic 

    # Steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        id: login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image }}
          tags: |
            type=raw,value=latest
            type=ref,event=branch
      
      - name: Build image and push to Docker Hub and GitHub Container Registry
        id: build_push
        uses: docker/build-push-action@v4
        with:
          # Relative path to the place where source code with Dockerfile is located
          context: ${{ matrix.context }}
          # Dockerfile
          file: ${{ matrix.dockerfile }}
          # Note: tags have to be all lower-case
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Image digest
        run: echo ${{ steps.build_push.outputs.digest }}
